{
    "AWSTemplateFormatVersion" : "2010-09-09",
    "Description"              : "The Purpose of this Template is to create a VPC has 2 public subnet,2 private subnet ,internet gateway , routing Table and NACL",
	"Parameters"               : {
        "SSLARN" : {
           
            "Description" : "SSL Certificate ARN",
            "Type"        : "String"
           
        }},
    "Resources"                : {
        "VPC" : {
            "Type" : "AWS::EC2::VPC",
            "Properties" : {
                "CidrBlock" : "10.0.0.0/16",
                "Tags"      : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "NetworkType",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "MyVPC"
                    }
                ]
            }
        },
        "PublicSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : "10.0.0.0/24",
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        "0",
                        {
                            "Fn::GetAZs" : ""
                        }
                    ]
                },
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "NetworkType",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "PublicSubnet1"
                    }
                ]
            }
        },
        "PublicSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : "10.0.1.0/24",
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        "1",
                        {
                            "Fn::GetAZs" : ""
                        }
                    ]
                },
                "MapPublicIpOnLaunch" : "true",
                "Tags"                : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "PublicSubnet2"
                    }
                ]
            }
        },
        "PrivateSubnet1" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : "10.0.2.0/24",
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        "2",
                        {
                            "Fn::GetAZs" : ""
                        }
                    ]
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "PrivateSubnet1"
                    }
                ]
            }
        },
        "PrivateSubnet2" : {
            "Type" : "AWS::EC2::Subnet",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "CidrBlock" : "10.0.3.0/24",
                "AvailabilityZone" : {
                    "Fn::Select" : [
                        "3",
                        {
                            "Fn::GetAZs" : ""
                        }
                    ]
                },
                "Tags"             : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "PrivateSubnet2"
                    }
                ]
            }
        },
        "InternetGateway" : {
            "Type" : "AWS::EC2::InternetGateway",
            "Properties" : {
                "Tags" : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "Trinimbus_IG"
                    }
                ]
            }
        },
        "AttachGateway"   : {
            "Type" : "AWS::EC2::VPCGatewayAttachment",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "InternetGatewayId" : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "PublicRouteTable" : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Public"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "Trinimbus_PublicRouteTable"
                    }
                ]
            }
        },
        "PublicRoute"      : {
            "Type" : "AWS::EC2::Route",
            "DependsOn" : "AttachGateway",
            "Properties" : {
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                },
                "DestinationCidrBlock" : "0.0.0.0/0",
                "GatewayId"            : {
                    "Ref" : "InternetGateway"
                }
            }
        },
        "PublicSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PublicSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                }
            }
        },
        "PublicSubnet2RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PublicSubnet2"
                },
                "RouteTableId" : {
                    "Ref" : "PublicRouteTable"
                }
            }
        },
        "PrivateRouteTable"                  : {
            "Type" : "AWS::EC2::RouteTable",
            "Properties" : {
                "VpcId" : {
                    "Ref" : "VPC"
                },
                "Tags"  : [
                    {
                        "Key" : "Application",
                        "Value" : {
                            "Ref" : "AWS::StackId"
                        }
                    },
                    {
                        "Key" : "Network",
                        "Value" : "Private"
                    },
                    {
                        "Key" : "Name",
                        "Value" : "Trinimbus_PrivateRouteTable"
                    }
                ]
            }
        },
        "PrivateSubnet1RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet1"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "PrivateSubnet2RouteTableAssociation" : {
            "Type" : "AWS::EC2::SubnetRouteTableAssociation",
            "Properties" : {
                "SubnetId" : {
                    "Ref" : "PrivateSubnet2"
                },
                "RouteTableId" : {
                    "Ref" : "PrivateRouteTable"
                }
            }
        },
        "ELBName"                             : {
            "Type" : "AWS::ElasticLoadBalancing::LoadBalancer",
            "DependsOn" : [
                "VPC",
                "PublicSubnet1",
                "PublicSubnet2",
                "AttachGateway"
            ],
            "Properties" : {
                "Subnets" : [
                    {
                        "Ref" : "PublicSubnet1"
                    },
                    {
                        "Ref" : "PublicSubnet2"
                    }
                ],
                "LBCookieStickinessPolicy" : [
                    {
                        "PolicyName" : "CookieBasedPolicy",
                        "CookieExpirationPeriod" : "30"
                    }
                ],
                "SecurityGroups"           : [
                    {
                        "Ref" : "WebServerSecurityGroup"
                    }
                ],
                "Listeners"                : [
                    {
                        "LoadBalancerPort" : "80",
                        "InstancePort"     : "80",
                        "Protocol"         : "HTTP",
                        "PolicyNames"      : [
                            "CookieBasedPolicy"
                        ]
                    },
					{
                        "LoadBalancerPort" : "443",
                        "InstancePort"     : "80",
                        "Protocol"         : "HTTPS",
                        "SSLCertificateId"      :{ "Ref" : "SSLARN" }
                    }
                ],
                "HealthCheck"              : {
                    "Target" : "HTTP:80/wordpress/wp-admin/install.php",
                    "HealthyThreshold" : "2",
                    "UnhealthyThreshold" : "5",
                    "Interval"           : "10",
                    "Timeout"            : "5"
                }
            }
        },
        "WebServerSecurityGroup"              : {
            "Type" : "AWS::EC2::SecurityGroup",
            "Properties" : {
                "GroupDescription" : "Security Group for  ELB",
                "VpcId"            : {
                    "Ref" : "VPC"
                },
                "SecurityGroupIngress" : [
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "80",
                        "ToPort"     : "80",
                        "CidrIp"     : "0.0.0.0/0"
                    },
                    {
                        "IpProtocol" : "tcp",
                        "FromPort"   : "443",
                        "ToPort"     : "443",
                        "CidrIp"     : "0.0.0.0/0"
                    }
                ]
            }
        }
    },
    "Outputs"                  : {
        "VPCID" : {
            "Value" : {
                "Ref" : "VPC"
            },
            "Description" : "VPC ID"
        },
        "PublicSubnet1" : {
            "Value" : {
                "Ref" : "PublicSubnet1"
            },
            "Export" : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-PublicSubnet1"
                }
            },
            "Description" : "PublicSubnet1"
        },
        "PublicSubnet2" : {
            "Value" : {
                "Ref" : "PublicSubnet2"
            },
            "Export" : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-PublicSubnet2"
                }
            },
            "Description" : "PublicSubnet2"
        },
        "PrivateSubnet1" : {
            "Value" : {
                "Ref" : "PrivateSubnet1"
            },
            "Export" : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-PrivateSubnet1"
                }
            },
            "Description" : "PrivateSubnet1"
        },
        "PrivateSubnet2" : {
            "Value" : {
                "Ref" : "PrivateSubnet2"
            },
            "Export" : {
                "Name" : {
                    "Fn::Sub" : "${AWS::StackName}-PrivateSubnet2"
                }
            },
            "Description" : "PrivateSubnet2"
        },
        "ELBName"        : {
            "Value" : {
                "Ref" : "ELBName"
            },
            "Description" : "ELBName"
        },
        "WebsiteURL"     : {
            "Value" : {
                "Fn::Join" : [
                    "",
                    [
                        "http://",
                        {
                            "Fn::GetAtt" : [
                                "ELBName",
                                "DNSName"
                            ]
                        },
                        "/wordpress"
                    ]
                ]
            },
            "Description" : "WordPress Website"
        },
        "WebServerSecurityGroup" : {
            "Value" : {
                "Ref" : "WebServerSecurityGroup"
            }
        }
    }
}